services:
  mongo:
    image: mongo
    container_name: mongo
    env_file:
      - .env
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/27017"]
      interval: 30s
      timeout: 5s
      retries: 5

  backend:
    image: knycper11/przychodnia-backend:prod
    container_name: backend
    ports:
      - "${BACKEND_PORT}:5000"
    env_file:
      - .env
    depends_on:
      - mongo
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  frontend:
    # image: knycper11/przychodnia-frontend:prod
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: frontend
    ports:
      - "3000:80"
    env_file:
      - .env
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 5s
      retries: 3

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.4
    container_name: keycloak
    command: start-dev
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_RELATIVE_PATH: /keycloak
      KEYCLOAK_FRONTEND_URL: http://localhost/keycloak
      KC_PROXY: edge
    volumes:
      - keycloak_data:/opt/keycloak/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "curl -fs -o /dev/null -w '%{http_code}' http://localhost:8080/keycloak/ | grep -q '302'"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - app_network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost"]
  #     interval: 30s
  #     timeout: 5s
  #     retries: 3

volumes:
  mongo_data:
  keycloak_data:
  frontend_node_modules:

networks:
  app_network:
